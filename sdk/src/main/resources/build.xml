<?xml version="1.0" encoding="UTF-8"?>
<project name="suite-sdk" default="usage">

    <description>
        Boundless SDK
    </description>

    <target name="usage">
        <echo message=""/>
        <echo message="Boundless SDK Commands"/>
        <echo message=""/>
        <echo message=" create     --&gt; create a new application"/>
        <echo message=" debug      --&gt; run an application in debug mode"/>
        <echo message=" package     --&gt; create a WAR file"/>
    </target>

    <property name="sdk.home" location="."/>
    <property name="app.proxy.geoserver" value="http://localhost:8080/geoserver"/>
    <property name="app.port" value="9080"/>
    <property name="suite.domain" value="localhost"/>
    <property name="suite.port" value="8080"/>
    <property name="suite.container" value="tomcat6x"/>
    <property name="suite.username" value="manager"/>
    <property name="suite.password" value="geoserver"/>
    <property name="sdk.build" location="${java.io.tmpdir}/suite-sdk/build"/>
    <property name="sdk.war" location="${app.warpath}"/>
    <property name="sdk.logfile" location="${java.io.tmpdir}/suite-sdk/error.log"/>
    <property name="app.template" value=""/>
    
    <target name="version">
        <property file="${sdk.home}/version.ini"/>
        <echo message="Boundless SDK ${suite_version} (${build_revision})"/>
    </target>

    <target name="checkpath">
        <echo file="${sdk.logfile}" append="true" message="Checking provided application path.${line.separator}"/>
        <condition property="app.path.set">
            <isset property="app.path"/>
        </condition>
        <fail message="Missing app path." unless="app.path.set"/>
        <property name="app.fullpath" location="${app.path}"/>
        <condition property="app.exists">
            <available file="${app.fullpath}" type="dir"/>
        </condition>
        <basename property="temp.app.name" file="${app.fullpath}"/>
        <condition property="app.name.blacklisted">
            <or>
                <equals arg1="${temp.app.name}" arg2="manager"/>
                <equals arg1="${temp.app.name}" arg2="geoserver"/>
                <equals arg1="${temp.app.name}" arg2="geoexplorer"/>
                <equals arg1="${temp.app.name}" arg2="dashboard"/>
                <equals arg1="${temp.app.name}" arg2="apps"/>
                <equals arg1="${temp.app.name}" arg2="recipes"/>
                <equals arg1="${temp.app.name}" arg2="opengeo-docs"/>
                <equals arg1="${temp.app.name}" arg2="opengeo docs"/>
                <!-- not using regular expressions because ant 1.6 doesn't support them -->
                <equals arg1="${temp.app.name}" arg2="cargo-jetty-deployer"/>
                <equals arg1="${temp.app.name}" arg2="cargo jetty deployer"/>
                <equals arg1="${temp.app.name}" arg2="cargo-jetty deployer"/>
                <equals arg1="${temp.app.name}" arg2="cargo jetty-deployer"/>
            </or>
        </condition>
        <fail message="The application name '${temp.app.name}' is reserved. Please choose a different one." if="app.name.blacklisted"/>
        <tempfile property="temp.file" destDir="${java.io.tmpdir}" suffix=".properties"/>
        <echo message="${temp.app.name}" file="${temp.file}"/>
        <replace file="${temp.file}" token=" " value="-"/>
        <loadfile property="app.name" srcFile="${temp.file}"/>
        <!-- <delete file="${temp.file}" failonerror="false" verbose="false"/> -->
    </target>

    <target name="create" depends="checkpath">
        <condition property="app.template.exists">
            <available file="${sdk.home}/src/main/resources/client/${app.template}" type="dir"/>
        </condition>
        <fail message="Directory '${app.fullpath}' already exists.  Specify the name for a new app directory." if="app.exists"/>
        <fail message="Template '${app.template}' is not available.  Specify the name of an existing template." unless="app.template.exists"/>
        <echo file="${sdk.logfile}" append="true" message="Creating application in '${app.fullpath}'.${line.separator}"/>
        <mkdir dir="${app.fullpath}"/>
        <copy todir="${app.fullpath}">
            <fileset dir="${sdk.home}/src/main/resources/client/${app.template}"/>
        </copy>
        <echo message="Created application: ${app.fullpath}"/>
    </target>
    
    <target name="debug" depends="checkpath">
        <fail message="Directory '${app.fullpath}' doesn't exist." unless="app.exists"/>
        <echo file="${sdk.logfile}" append="true" message="Starting debug server for '${app.fullpath}.${line.separator}"/>
        <java classname="org.ringojs.tools.launcher.Main" failonerror="true" fork="true" error="${sdk.logfile}" append="true">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="app.static" path="${app.fullpath}"/>
            <sysproperty key="app.debug" value="1"/>
            <sysproperty key="app.proxy.geoserver" value="${app.proxy.geoserver}"/>
            <sysproperty key="ringo.home" path="${sdk.home}"/>
            <sysproperty key="ringo.modulepath" path="${sdk.home}/lib"/>
            <arg path="${sdk.home}/src/main/resources/server/main.js"/>
            <arg line="-p ${app.port}"/>
        </java>
    </target>

    <target name="use-checks">
        <available file="${app.fullpath}/src/ext" property="use.ext"/>
        <available file="${app.fullpath}/src/openlayers" property="use.openlayers"/>
        <available file="${app.fullpath}/src/geoext" property="use.geoext"/>
        <available file="${app.fullpath}/src/gxp" property="use.gxp"/>
        <available file="${app.fullpath}/src/jquery" property="use.jquery"/>
        <available file="${app.fullpath}/src/bootstrap" property="use.bootstrap"/>
        <available file="${app.fullpath}/src/font-awesome" property="use.fa"/>
        <available file="${app.fullpath}/src/bootbox" property="use.bootbox"/>
        <available file="${app.fullpath}/src/ol3" property="use.ol3"/>
        <available file="${app.fullpath}/src/css" property="use.css"/>
    </target>

    <target name="copy-app">
        <property name="app.build" location="${sdk.build}/${app.name}"/>
        <mkdir dir="${app.build}"/>
        <copy todir="${app.build}">
            <fileset dir="${sdk.home}/src/main/webapp"/>
            <filterset>
                <filter token="APP_NAME" value="${app.name}"/>
            </filterset>
        </copy>
    </target>

    <target name="copy-ext" if="use.ext">
        <!-- copy Ext resources -->
        <copy todir="${app.build}/src/ext">
            <fileset dir="${app.fullpath}/src/ext"/>
        </copy>
    </target>

    <target name="copy-jquery" if="use.jquery">
        <!-- copy jQuery resources -->
        <copy todir="${app.build}/src/jquery">
            <fileset dir="${app.fullpath}/src/jquery"/>
        </copy>
    </target>

    <target name="copy-bootstrap" if="use.bootstrap">
        <!-- copy bootstrap resources -->
        <copy todir="${app.build}/src/bootstrap">
            <fileset dir="${app.fullpath}/src/bootstrap"/>
        </copy>
    </target>

    <target name="copy-bootbox" if="use.bootbox">
        <!-- copy bootbox resources -->
        <copy todir="${app.build}/src/bootbox">
            <fileset dir="${app.fullpath}/src/bootbox"/>
        </copy>
    </target>

    <target name="copy-fa" if="use.fa">
        <!-- copy font-awesome resources -->
        <copy todir="${app.build}/src/font-awesome">
            <fileset dir="${app.fullpath}/src/font-awesome"/>
        </copy>
    </target>

    <target name="copy-ol3" if="use.ol3">
        <!-- copy ol3 resources -->
        <copy todir="${app.build}/src/ol3">
            <fileset dir="${app.fullpath}/src/ol3"/>
        </copy>
    </target>

    <target name="copy-openlayers" if="use.openlayers">
        <!-- copy OpenLayers resources -->
        <copy todir="${app.build}/src/openlayers/theme">
            <fileset dir="${app.fullpath}/src/openlayers/theme"/>
        </copy>
    </target>

    <target name="copy-css" if="use.css">
        <!-- copy css resources -->
        <copy todir="${app.build}/src/css">
            <fileset dir="${app.fullpath}/src/css"/>
        </copy>
    </target>

    <target name="copy-geoext" if="use.geoext">
        <!-- copy GeoExt resources -->
        <copy todir="${app.build}/src/geoext/resources">
            <fileset dir="${app.fullpath}/src/geoext/resources"/>
        </copy>
    </target>

    <target name="copy-gxp" if="use.gxp">
        <!-- copy gxp resources -->
        <copy todir="${app.build}/src/gxp/theme">
            <fileset dir="${app.fullpath}/src/gxp/theme"/>
        </copy>
    </target>

    <target name="build" depends="checkpath,copy-app,use-checks,copy-ext,copy-openlayers,copy-geoext,copy-gxp,copy-jquery,copy-bootstrap,copy-fa,copy-bootbox,copy-ol3,copy-css">
        <fail message="Directory '${app.fullpath}' doesn't exist." unless="app.exists"/>
        <echo file="${sdk.logfile}" append="true" message="Building application resources for '${app.fullpath}'.${line.separator}"/>
        <!-- build app js -->
        <mkdir dir="${app.build}/lib"/>
        <java classname="org.ringojs.tools.launcher.Main" failonerror="true" fork="true" output="${sdk.logfile}" append="true">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="ringo.home" path="${sdk.home}/"/>
            <arg path="${sdk.home}/lib/buildkit/lib/buildkit/build.js"/>
            <arg value="-o"/>
            <arg path="${app.build}/lib"/>
            <arg path="${app.fullpath}/buildjs.cfg"/>
        </java>
        <!-- copy additional app resources -->
        <copy todir="${app.build}/theme" failonerror="false">
            <fileset dir="${app.fullpath}/theme"/>
        </copy>
        <copy todir="${app.build}">
            <fileset dir="${app.fullpath}">
                <include name="*"/>
            </fileset>
        </copy>
        <!-- replace debug versions with production versions -->
        <replace file="${app.build}/index.html" token="ol-whitespace.js" value="ol.js"/>
        <replace file="${app.build}/index.html" token="jquery.js" value="jquery.min.js"/>
        <replace file="${app.build}/index.html" token="bootstrap.js" value="bootstrap.min.js"/>
        <replace file="${app.build}/index.html" token="bootbox.js" value="bootbox.min.js"/>
        <replace file="${app.build}/index.html" token="bootstrap.css" value="bootstrap.min.css"/>
        <replace file="${app.build}/index.html" token="font-awesome.css" value="font-awesome.min.css"/>
    </target>

    <target name="package" depends="build">
        <echo file="${sdk.logfile}" append="true" message="Building application archive for '${app.fullpath}'.${line.separator}"/>
        <war destfile="${sdk.war}/${app.name}.war" webxml="${sdk.build}/${app.name}/WEB-INF/web.xml">
            <fileset dir="${sdk.build}/${app.name}"/>
        </war>
    </target>
    
</project>
